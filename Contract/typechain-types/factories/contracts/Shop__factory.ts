/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Shop, ShopInterface } from "../../contracts/Shop";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "game",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "game",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "userListable",
        type: "bool",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "initializeShop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "game",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "item",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isNFT",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "chargeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "game",
        type: "uint256",
      },
    ],
    name: "viewShop",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "item",
                type: "address",
              },
              {
                internalType: "bool",
                name: "isNFT",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "nftId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "chargeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "listingId",
                type: "uint256",
              },
            ],
            internalType: "struct Shop.Listing[]",
            name: "listings",
            type: "tuple[]",
          },
          {
            internalType: "bool",
            name: "userListable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "listingNum",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct Shop.ShopInternal",
        name: "s",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610d81806100a56000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100fa5780639979c0091461011a5780639ed1cb701461012d578063f2fde38b1461014d57600080fd5b80631d167f5a146100825780634c5e4e3d146100df578063715018a6146100f2575b600080fd5b6100dd610090366004610ad1565b60009283526001602081905260408420908101805460ff191693151593909317909255600282019290925560030180546001600160a01b0319166001600160a01b03909216919091179055565b005b6100dd6100ed366004610b0f565b610160565b6100dd610392565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100dd610128366004610b7b565b6103a6565b61014061013b366004610b9d565b61089f565b6040516101119190610bb6565b6100dd61015b366004610c85565b6109ba565b84156101d4576040516323b872dd60e01b81523360048201523060248201526044810185905286906001600160a01b038216906323b872dd90606401600060405180830381600087803b1580156101b657600080fd5b505af11580156101ca573d6000803e3d6000fd5b5050505050610294565b6040516323b872dd60e01b81523360048201523060248201526044810184905286906001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024d9190610ca7565b610292576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600060248201526044015b60405180910390fd5b505b6000878152600160208181526040808420815160e0810183526001600160a01b038c811682528b15158286019081529382018b8152606083018b81528a83166080850190815260a085018b81526002808801805460c089019081528954808e018b558a8f529b8e2098516006909c0290980180549a519b881674ffffffffffffffffffffffffffffffffffffffffff19909b169a909a17600160a01b9b15159b909b029a909a178955935199880199909955905191860191909155516003850180546001600160a01b031916919092161790559351600483015592516005909101558054919261038383610cda565b91905055505050505050505050565b61039a610a11565b6103a46000610a57565b565b6000828152600160205260408120805490915b825481101561072657838360000182815481106103d8576103d8610cf3565b9060005260206000209060060201600501540361071e57809150600083600001828154811061040957610409610cf3565b60009182526020909120600360069092020101546001600160a01b03169050806323b872dd336104416000546001600160a01b031690565b87600001868154811061045657610456610cf3565b9060005260206000209060060201600401546040518463ffffffff1660e01b81526004016104a5939291906001600160a01b039384168152919092166020820152604081019190915260600190565b6020604051808303816000875af11580156104c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e89190610ca7565b6104f157600080fd5b83600001828154811061050657610506610cf3565b6000918252602090912060069091020154600160a01b900460ff161561061457600084600001838154811061053d5761053d610cf3565b600091825260209091206006909102015485546001600160a01b03909116915081906323b872dd903090339089908890811061057b5761057b610cf3565b60009182526020909120600160069092020101546040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b5050505050610718565b600084600001838154811061062b5761062b610cf3565b600091825260209091206006909102015485546001600160a01b03909116915081906323b872dd903090339089908890811061066957610669610cf3565b60009182526020909120600260069092020101546040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af11580156106e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070d9190610ca7565b61071657600080fd5b505b50610726565b6001016103b9565b50805b825461073790600190610d09565b821015610829578261074a826001610d22565b8154811061075a5761075a610cf3565b906000526020600020906006020183600001828154811061077d5761077d610cf3565b60009182526020909120825460069092020180546001600160a01b03198082166001600160a01b039485169081178455855460ff600160a01b918290041615150274ffffffffffffffffffffffffffffffffffffffffff1990931617919091178255600180850154818401556002808601549084015560038086015490840180549093169416939093179055600480840154908201556005928301549201919091559190910190610729565b50815482908061083b5761083b610d35565b600082815260208120600660001990930192830201805474ffffffffffffffffffffffffffffffffffffffffff1916815560018101829055600281018290556003810180546001600160a01b03191690556004810182905560050155905550505050565b60408051608081018252606080825260006020830181905292820183905281019190915260008281526001602090815260408083208151815460a09481028201850190935260808101838152909491938593919285929185015b8282101561097f5760008481526020908190206040805160e0810182526006860290920180546001600160a01b038082168552600160a01b90910460ff1615158486015260018083015493850193909352600282015460608501526003820154166080840152600481015460a08401526005015460c083015290835290920191016108f9565b50505090825250600182015460ff1615156020820152600282015460408201526003909101546001600160a01b031660609091015292915050565b6109c2610a11565b6001600160a01b038116610a05576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610289565b610a0e81610a57565b50565b6000546001600160a01b031633146103a4576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610289565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8015158114610a0e57600080fd5b80356001600160a01b0381168114610acc57600080fd5b919050565b600080600060608486031215610ae657600080fd5b833592506020840135610af881610aa7565b9150610b0660408501610ab5565b90509250925092565b600080600080600080600060e0888a031215610b2a57600080fd5b87359650610b3a60208901610ab5565b95506040880135610b4a81610aa7565b94506060880135935060808801359250610b6660a08901610ab5565b915060c0880135905092959891949750929550565b60008060408385031215610b8e57600080fd5b50508035926020909101359150565b600060208284031215610baf57600080fd5b5035919050565b6000602080835260a080840185516080808588015282825180855260c0945060c089019150868401935060005b81811015610c4457845180516001600160a01b0390811685528982015115158a86015260408083015190860152606080830151908601528582015116858501528781015188850152860151868401529387019360e090920191600101610be3565b5050948801518015156040890152946040890151606089015260608901519550610c7960808901876001600160a01b03169052565b98975050505050505050565b600060208284031215610c9757600080fd5b610ca082610ab5565b9392505050565b600060208284031215610cb957600080fd5b8151610ca081610aa7565b634e487b7160e01b600052601160045260246000fd5b600060018201610cec57610cec610cc4565b5060010190565b634e487b7160e01b600052603260045260246000fd5b81810381811115610d1c57610d1c610cc4565b92915050565b80820180821115610d1c57610d1c610cc4565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220d451f7bc58dcc1a5ddd0aec54cf4a4e7ba03e73916dde08d27a5d3838b73007264736f6c63430008180033";

type ShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shop__factory extends ContractFactory {
  constructor(...args: ShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Shop & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Shop__factory {
    return super.connect(runner) as Shop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopInterface {
    return new Interface(_abi) as ShopInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Shop {
    return new Contract(address, _abi, runner) as unknown as Shop;
  }
}
